# This CI configuration tests the cosmwasm-template repository itself,
# not the resulting project. We want to ensure that
# 1. the template to project generation works
# 2. the template files are up to date
#
# We chose Appveyor for this task as it allows us to use an arbitrary config
# location. Furthermore it allows us to ship a Circle CI and Travis config
# generated for the resulting project.

environment:
  matrix:
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: stable
#    - TARGET: x86_64-pc-windows-msvc
#      CHANNEL: nightly

cache:
  - 'C:\Users\appveyor\.cargo\bin'
  - 'C:\Users\appveyor\.cargo\registry'
  - 'C:\projects\test-generation-in-ci\target\debug\.fingerprint -> Cargo.lock, Cargo.toml'
  - 'C:\projects\test-generation-in-ci\target\debug\build -> Cargo.lock, Cargo.toml'
  - 'C:\projects\test-generation-in-ci\target\debug\deps -> Cargo.lock, Cargo.toml'
  - 'C:\projects\test-generation-in-ci\target\wasm32-unknown-unknown\release\.fingerprint -> Cargo.lock, Cargo.toml'
  - 'C:\projects\test-generation-in-ci\target\wasm32-unknown-unknown\release\build -> Cargo.lock, Cargo.toml'
  - 'C:\projects\test-generation-in-ci\target\wasm32-unknown-unknown\release\deps -> Cargo.lock, Cargo.toml'

install:
  - echo hi
  - cmd: if not exist 'C:\Users\appveyor\.cargo\bin\rustc' ( appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe && rustup-init.exe --default-host %TARGET% --default-toolchain %CHANNEL% -y )
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - dir C:\Users\appveyor\.cargo\bin
  - rustc --version
  - cargo --version
  - rustup target add wasm32-unknown-unknown
  - cmd: if not exist 'C:\Users\appveyor\.cargo\bin\cargo-generate' ( cargo install cargo-generate --features vendored-openssl )

build_script:
  - cd ..
  - cargo generate --git cosmwasm-template --name test-generation-in-ci
  - cd test-generation-in-ci
  - dir
  - cargo unit-test
  - cargo wasm
  - cargo test
  - cargo schema

# whitelist long living branches
branches:
  only:
    - master
